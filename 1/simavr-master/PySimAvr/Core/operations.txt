# -*- mode: Conf -*-
C <- 0
C <- 1
H <- 0
H <- 1
I <- 0
I <- 1
# if (C == 0) then PC <- PC + $k + 1
# if (C == 1) then PC <- PC + $k + 1
# if (H == 0) then PC <- PC + $k + 1
# if (H == 1) then PC <- PC + $k + 1
# if (I == 0) then PC <- PC + $k + 1
# if (I == 1) then PC <- PC + $k + 1
# if (N == 0) then PC <- PC + $k + 1
# if (N == 1) then PC <- PC + $k + 1
# if (N + V == 0) then PC <- PC + $k + 1
# if (N + V == 1) then PC <- PC + $k + 1
### if (@A[$b] == 0) PC <- PC + 2 or 3
### if (@A[$b] == 1) PC <- PC + 2 or 3
### if (@d == @r) PC <- PC + 2 or 3
### if (@r[$b] == 0) PC <- PC + 2 or 3
### if (@r[$b] == 1) PC <- PC + 2 or 3
# if (SREG[s] == 0) then PC <- PC + $k + 1
# if (SREG[s] == 1) then PC <- PC + $k + 1
# if (T == 0) then PC <- PC + $k + 1
# if (T == 1) then PC <- PC + $k + 1
# if (V == 0) then PC <- PC + $k + 1
# if (V == 1) then PC <- PC + $k + 1
# if (Z == 0) then PC <- PC + $k + 1
# if (Z == 1) then PC <- PC + $k + 1
# IO[@A, $b] <- 0
# IO[@A, $b] <- 1
[$k] <- @r
N <- 0
N <- 1
PC <- [EIND:Z]
PC <- $k
PC <- PC + $k + 1
PC <- STACK
PC <- Z
@A <- @r
R0 <- [RAMPZ:Z]
R1:R0 <- @d |! @r
# R1:R0 <- (@d |! @r) << 1
# @d[0] <- C; @d[n+1] <- @d[n]; C <- @d[7]
@d <- 0x00 - @d
@d <- 0xFF
@d <- 0xFF - @d
# @d+1:@d <- @r+1:@r
@d[3..0] <- @d[7..4]; @d[7..4] <- @d[3..0]
@d[7] <- C; @d[n] <- @d[n+1]; C <- @d[0]
@d[$b] <- T
@dh:@dl <- @dh:@dl - $k
@dh:@dl <- @dh:@dl + $k
@d <- [$k]
@d <- $k
# @d[n+1] <- @d[n]; @d[0] <- 0
### @d[n] <- @d[n+1]; n=0..6
# @d[n] <- @d[n+1]; @d[7] <- 0
@d <- P
@d <- [RAMPZ:Z]
@d <- [RAMPZ:Z]; RAMPZ:Z <- RAMPZ:Z + 1
@d <- @d - 1
@d <- @d + 1
@d <- @d | $k
@d <- @d - $k
@d <- @d & $k
@d <- @d - $k - C
@d <- @d & @d
@d <- @d + @d
@d <- @d | @r
@d <- @d - @r
@d <- @d & @r
@d <- @d + @r
@d <- @d - @r - C
@d <- @d + @r + C
@d <- @r
@d <- STACK
@d <- [X]
@d <- [X]; X <- X + 1
@d <- [Y]
@d <- [Y + $q]
@d <- [Y]; Y <- Y + 1
@d <- [Z]
@d <- [Z + $q]
@d <- [Z]; Z <- Z + 1
S <- 0
S <- 1
SREG[s] <- 0
SREG[s] <- 1
STACK <- @r
T <- 0
T <- 1
T <- @r[$b]
V <- 0
V <- 1
[X] <- @r
[X] <- @r; X <- X + 1
X <- X - 1; @d <- [X]
[Y + $q] <- @r
[Y] <- @r
[Y] <- @r; Y <- Y + 1
Y <- Y - 1; @d <- [Y]
Y <- Y - 1; [Y] <- @r
Z <- 0
Z <- 1
[Z + $q] <- @r
Z <- Z - 1; @d <- [Z]
Z <- Z - 1; [Z] <- @r
