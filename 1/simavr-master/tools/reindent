#! /bin/bash

####################################################################################################

#  -bad, --blank-lines-after-declarations
#      Force blank lines after the declarations.
# 
#  -bap, --blank-lines-after-procedures
#      Force blank lines after procedure bodies.
# 
#  -bbb, --blank-lines-before-block-comments
#      Force blank lines before block comments.
# 
#  -bbo, --break-before-boolean-operator
#      Prefer to break long lines before boolean operators.
# 
#  -bc, --blank-lines-after-commas
#      Force newline after comma in declaration.
# 
#  -bl, --braces-after-if-line
#      Put braces on line after if, etc.
# 
#  -blf, --braces-after-func-def-line
#      Put braces on line following function definition line.
# 
#  -blin, --brace-indentn
#      Indent braces n spaces.
# 
#  -bls, --braces-after-struct-decl-line
#      Put braces on the line after struct declaration lines.
# 
#  -br, --braces-on-if-line
#      Put braces on line with if, etc.
# 
#  -brf, --braces-on-func-def-line
#      Put braces on function definition line.
# 
#  -brs, --braces-on-struct-decl-line
#      Put braces on struct declaration line.
# 
#  -bs, --Bill-Shannon, --blank-before-sizeof
#      Put a space between sizeof and its argument.
# 
#  -cn, --comment-indentationn
#      Put comments to the right of code in column n.
# 
#  -cbin, --case-brace-indentationn
#      Indent braces after a case label N spaces.
# 
#  -cdn, --declaration-comment-columnn
#      Put comments to the right of the declarations in column n.
# 
#  -cdb, --comment-delimiters-on-blank-lines
#      Put comment delimiters on blank lines.
# 
#  -cdw, --cuddle-do-while
#      Cuddle while of do {} while; and preceding ‘}’.
# 
#  -ce, --cuddle-else
#      Cuddle else and preceding ‘}’.
# 
#  -cin, --continuation-indentationn
#      Continuation indent of n spaces.
# 
#  -clin, --case-indentationn
#      Case label indent of n spaces.
# 
#  -cpn, --else-endif-columnn
#      Put comments to the right of #else and #endif statements in column n.
# 
#  -cs, --space-after-cast
#      Put a space after a cast operator.
# 
#  -dn, --line-comments-indentationn
#      Set indentation of comments not to the right of code to n spaces.
# 
#  -bfda, --break-function-decl-args
#      Break the line before all arguments in a declaration.
# 
#  -bfde, --break-function-decl-args-end
#      Break the line after the last argument in a declaration.
# 
#  -djn, --left-justify-declarations
#      If -cd 0 is used then comments after declarations are left justified behind the declaration.
# 
#  -din, --declaration-indentationn
#      Put variables in column n.
# 
#  -fc1, --format-first-column-comments
#      Format comments in the first column.
# 
#  -fca, --format-all-comments
#      Do not disable all formatting of comments.
# 
#  -gnu, --gnu-style
#      Use GNU coding style.  This is the default.
# 
#  -hnl, --honour-newlines
#      Prefer to break long lines at the position of newlines in the input.
# 
#  -in, --indent-leveln
#      Set indentation level to n spaces.
# 
#  -iln, --indent-labeln
#      Set offset for labels to column n.
# 
#  -ipn, --parameter-indentationn
#      Indent parameter types in old-style function definitions by n spaces.
# 
#  -kr, --k-and-r-style
#      Use Kernighan & Ritchie coding style.
# 
#  -ln, --line-lengthn
#      Set maximum line length for non-comment lines to n.
# 
#  -lcn, --comment-line-lengthn
#      Set maximum line length for comment formatting to n.
# 
#  -linux, --linux-style
#      Use Linux coding style.
# 
#  -lp, --continue-at-parentheses
#      Line up continued lines at parentheses.
# 
#  -lps, --leave-preprocessor-space
#      Leave space between ‘#’ and preprocessor directive.
# 
#  -nlps, --remove-preprocessor-space
#      Remove space between ‘#’ and preprocessor directive.
# 
#  -nbad, --no-blank-lines-after-declarations
#      Do not force blank lines after declarations.
# 
#  -nbap, --no-blank-lines-after-procedures
#      Do not force blank lines after procedure bodies.
# 
#  -nbbo, --break-after-boolean-operator
#      Do not prefer to break long lines before boolean operators.
# 
#  -nbc, --no-blank-lines-after-commas
#      Do not force newlines after commas in declarations.
# 
#  -nbfda, --dont-break-function-decl-args
#      Don’t put each argument in a function declaration on a separate line.
# 
#  -ncdb, --no-comment-delimiters-on-blank-lines
#      Do not put comment delimiters on blank lines.
# 
#  -ncdw, --dont-cuddle-do-while
#      Do not cuddle } and the while of a do {} while;.
# 
#  -nce, --dont-cuddle-else
#      Do not cuddle } and else.
# 
#  -ncs, --no-space-after-casts
#      Do not put a space after cast operators.
# 
#  -ndjn, --dont-left-justify-declarations
#      Comments after declarations are treated the same as comments after other statements.
# 
#  -nfc1, --dont-format-first-column-comments
#      Do not format comments in the first column as normal.
# 
#  -nfca, --dont-format-comments
#      Do not format any comments.
# 
#  -nhnl, --ignore-newlines
#      Do not prefer to break long lines at the position of newlines in the input.
# 
#  -nip, --no-parameter-indentation
#      Zero width indentation for parameters.
# 
#  -nlp, --dont-line-up-parentheses
#      Do not line up parentheses.
# 
#  -npcs, --no-space-after-function-call-names
#      Do not put space after the function in function calls.
# 
#  -nprs, --no-space-after-parentheses
#      Do not put a space after every ’(’ and before every ’)’.
# 
#  -npsl, --dont-break-procedure-type
#      Put the type of a procedure on the same line as its name.
# 
#  -nsaf, --no-space-after-for
#      Do not put a space after every for.
# 
#  -nsai, --no-space-after-if
#      Do not put a space after every if.
# 
#  -nsaw, --no-space-after-while
#      Do not put a space after every while.
# 
#  -nsc, --dont-star-comments
#      Do not put the ‘*’ character at the left of comments.
# 
#  -nsob, --leave-optional-blank-lines
#      Do not swallow optional blank lines.
# 
#  -nss, --dont-space-special-semicolon
#      Do not force a space before the semicolon after certain statements.  Disables ‘-ss’.
# 
#  -nut, --no-tabs
#      Use spaces instead of tabs.
# 
#  -orig, --original
#      Use the original Berkeley coding style.
# 
#  -npro, --ignore-profile
#      Do not read ‘.indent.pro’ files.
# 
#  -pcs, --space-after-procedure-calls
#      Insert a space between the name of the procedure being called and the ‘(’.
# 
#  -pin, --paren-indentationn
#      Specify the extra indentation per open parentheses ’(’ when a statement is broken.See  STATEMENTS.
# 
#  -pmt, --preserve-mtime
#      Preserve access and modification times on output files.See  MISCELLANEOUS OPTIONS.
# 
#  -ppin, --preprocessor-indentationn
#      Specify the indentation for preprocessor conditional statements.See  INDENTATION.
# 
#  -prs, --space-after-parentheses
#      Put a space after every ’(’ and before every ’)’.
# 
#  -psl, --procnames-start-lines
#      Put the type of a procedure on the line before its name.
# 
#  -saf, --space-after-for
#      Put a space after each for.
# 
#  -sai, --space-after-if
#      Put a space after each if.
# 
#  -saw, --space-after-while
#      Put a space after each while.
# 
#  -sbin, --struct-brace-indentationn
#      Indent braces of a struct, union or enum N spaces.
# 
#  -sc, --start-left-side-of-comments
#      Put the ‘*’ character at the left of comments.
# 
#  -sob, --swallow-optional-blank-lines
#      Swallow optional blank lines.
# 
#  -ss, --space-special-semicolon
#      On one-line for and while statements, force a blank before the semicolon.
# 
#  -st, --standard-output
#      Write to standard output.
# 
#  -T  Tell indent the name of typenames.
# 
#  -tsn, --tab-sizen
#      Set tab size to n spaces.
# 
#  -ut, --use-tabs
#      Use tabs. This is the default.

####################################################################################################

function indent_file {

  file=$1
  
  sed -e 's/\t/ /g;' -i $file

  indent \
    --blank-lines-after-procedures \
    --brace-indent2 \
    --braces-after-if-line \
    --braces-after-struct-decl-line \
    --break-before-boolean-operator \
    --continue-at-parentheses \
    --declaration-comment-column1 \
    --declaration-indentation2 \
    --dont-cuddle-else \
    --dont-format-comments \
    --dont-format-first-column-comments1 \
    --dont-left-justify-declarations \
    --dont-star-comments \
    --else-endif-column1 \
    --honour-newlines \
    --indent-level2 \
    --leave-optional-blank-lines \
    --line-length100 \
    --no-blank-lines-after-commas \
    --no-blank-lines-after-declarations \
    --no-comment-delimiters-on-blank-lines \
    --no-space-after-parentheses \
    --no-tabs \
    --parameter-indentation5 \
    --procnames-start-lines \
    --space-after-cast \
    --space-after-for \
    --space-after-if \
    --space-after-procedure-calls \
    --space-after-while \
    $file
  
  # Fix: ...;    // comment
  sed -e 's/; *\/\//;    \/\//' -i $file
}

for file in $*; do
  indent_file $file
done
  
####################################################################################################
# 
# End
# 
####################################################################################################
